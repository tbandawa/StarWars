apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'

android {
    compileSdkVersion Versions.compileSdk
    buildToolsVersion Versions.buildTools

    defaultConfig {
        minSdkVersion Versions.minSdk
        targetSdkVersion Versions.targetSdk
        versionCode Versions.versionCode
        versionName Versions.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        buildConfigField "String", 'SWAPI_BASE_URL', '"https://swapi.dev/"'

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
}

dependencies {
    implementation project(":commons")

    // Hilt
    implementation(Deps.hilt_android)
    kapt(Deps.hilt_comp)

    // Retrofit
    implementation(Deps.okhttp3)
    implementation(Deps.logging_interceptor)
    implementation(Deps.retrofit)
    implementation(Deps.converter_gson)

    testImplementation 'junit:junit:4.+'
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.9.0'
    testImplementation 'android.arch.core:core-testing:1.1.1'
    androidTestImplementation 'android.arch.core:core-testing:1.1.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}